{"version":3,"sources":["components/AddCategory.jsx","components/GifGridItem.jsx","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGrid.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","placeholder","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGrid","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MA4BeA,EAzBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAWvC,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,MAIlB,SACI,uBACIO,KAAK,OACLC,YAAY,YACZC,MAAQV,EACRW,SAdS,SAACR,GAAD,OAAOF,EAAcE,EAAES,OAAOF,a,QCKxCG,EATK,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC9B,OACI,sBAAKC,UAAU,2CAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,Q,uBCLJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,YAClB,MAAO,CACHf,GAFwE,EAAvDA,GAGjBC,MAHwE,EAAnDA,MAIrBC,IAJwE,EAA5Cc,OAAUC,iBAAoBf,QAJ/C,kBAWbY,GAXa,4CAAH,sDCsBLI,EApBa,SAAEX,GAAe,IAAD,EACdtB,mBAAS,CAC/B4B,KAAM,GACNM,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAU,WACNhB,EAASC,GACJgB,MAAK,SAAAC,GACEH,EAAS,CACLR,KAAMW,EACNL,SAAQ,SAGzB,CAAEZ,IAGEa,GCOIK,EAtBC,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,EAEJW,EAAaX,GAA/BM,EAFsB,EAEtBA,KAAMM,EAFgB,EAEhBA,QAEd,OACI,qCACI,oBAAIhB,UAAU,sCAAd,SAAsDI,IACpDY,GAAW,mBAAGhB,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SAEQU,EAAKE,KAAI,SAACW,GAAD,OACL,cAAC,EAAD,eAESA,GADCA,EAAI1B,aCUvB2B,EAtBM,WAAM,MAEa1C,mBAAS,CAAC,KAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAIvB,OACI,qCACI,mBAAGmB,UAAU,OAAb,0BACA,8CACA,cAAC,EAAD,CAAanB,cAAgBA,IAC7B,6BAEQ4C,EAAWb,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CACIA,SAAWA,GACLA,YCdlCsB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5fc5b1ff.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleChange = (e) => setInputValue(e.target.value);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cat => [inputValue, ...cat]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Buscar...\"\r\n                value={ inputValue }\r\n                onChange={ handleChange } />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func,\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUp\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=xDnl7Na0p9UNHISs7ZZVjrpGCmH25fTH`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(({ id, title, images: { downsized_medium: { url } } }) => {\r\n        return {\r\n            id,\r\n            title,\r\n            url\r\n        }\r\n    })\r\n   return gifs;\r\n}","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n            .then(imgs=>{\r\n                    setState({ \r\n                        data: imgs,\r\n                        loading:false\r\n                    });\r\n            })\r\n    }, [ category ])\r\n\r\n \r\n    return state;\r\n}\r\n\r\nexport default useFetchGifs\r\n","// import React, { useState, useEffect } from 'react'\r\nimport GifGridItem from './GifGridItem';\r\n\r\nimport useFetchGifs from \"../hooks/useFetchGifs\"\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInUp\">{ category }</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    data.map((img) =>\r\n                        <GifGridItem\r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball']; no se usa :c\r\n    const [categories, setCategories] = useState(['']);\r\n    // const handleAdd = () => setCategories([...categories, 'HunterXHunter']);\r\n    return (\r\n        <>\r\n            <p className=\"alex\">alex cabrito</p>\r\n            <h2>Busca tu GIF</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid\r\n                            category={ category }\r\n                            key={ category } />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}